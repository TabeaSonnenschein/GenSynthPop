% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_group_fractions.R
\name{calculate_fractions}
\alias{calculate_fractions}
\title{Calculate Fractions from a Contingency Table}
\usage{
calculate_fractions(
  df_contingency,
  group_by,
  target_attribute,
  margins_names = NULL,
  margins_group = NULL
)
}
\arguments{
\item{df_contingency}{A data frame representing the contingency table, which must include conditional
attributes and a \code{count} column indicating the frequency of each attribute combination.}

\item{group_by}{A character vector specifying the conditional attributes by which to group the data when calculating
the fractions. This should include the attributes to consider for the fraction calculation.}

\item{target_attribute}{A character string representing the target attribute for which fractions are to be calculated.
This attribute should be included in the \code{df_contingency} data frame.}

\item{margins_names}{A character vector of margin names to include in the grouping, if any. This is optional;
if provided, it is combined with the \code{group_by} parameters.}

\item{margins_group}{A character vector representing the groups for margins, which can also influence the fraction calculations.
This parameter is optional.}
}
\value{
A data frame with an added \code{fraction} column, which displays the calculated fractions for each group of
conditional attributes based on the provided contingency table.
}
\description{
This function computes the fractions of counts for each combination of conditional attributes in a contingency
table. It takes a data frame containing counts and adds a new column representing the proportion of the count
for each group of conditional attributes.
}
\details{
The function calculates the fraction of counts for each group defined by the specified \code{group_by} attributes.
If \code{margins_names} are provided, these will be included in the grouping for the fraction calculation. The function
ensures that the target attribute is excluded from the grouping to avoid redundancy.

A new column named \code{fraction} is added to the output data frame, showing the proportion of each count relative
to the total count for the corresponding group. If the total count for a group is zero, the fraction will be set to zero to
avoid division by zero errors.
}
\examples{
# Example: Calculate fractions for a simple contingency table
df_contingency <- data.frame(
  age_group = c("0-15", "15-25", "25-45", "45-65"),
  sex = c("male", "female", "male", "female"),
  count = c(30, 20, 50, 40)
)

fractions <- calculate_fractions(df_contingency, 
                                  group_by = c("age_group"), 
                                  target_attribute = "sex")
# Returns the data frame with an added 'fraction' column

}
\keyword{internal}
