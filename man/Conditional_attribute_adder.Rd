% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditional_attribute_adder.R
\name{Conditional_attribute_adder}
\alias{Conditional_attribute_adder}
\title{Add a Target Attribute to a Synthetic Population Using Contingency Table Fitting}
\usage{
Conditional_attribute_adder(
  df,
  df_contingency,
  target_attribute,
  group_by = NULL,
  margins = NULL,
  margins_names = NULL
)
}
\arguments{
\item{df}{A data frame representing the synthetic population, where each row corresponds to an individual agent.}

\item{df_contingency}{A data frame representing the contingency table that contains the target attribute's distribution.
This should include the column for the target attribute and any other grouping variables.}

\item{target_attribute}{A string specifying the name of the attribute to be added to the synthetic population.
This attribute must be present in the \code{df_contingency}.}

\item{group_by}{if no margins are provided, pick a a vector of column names that exist in both \code{df} and \code{df_contingency}. These are the attributes
by which the population and contingency table are grouped. If margins are provided pick a column  name
that exists in both the 'df' and all the 'margins' subtables. These are the attributes
by which the population and margins tables are grouped and whose subgroup marginal distributions are used to fit the contingency table using IPF. Group_by often represent spatial or categorical splits.}

\item{margins}{An optional list of data frames containing marginal distributions to be used for IPF. If NULL,
only the contingency table is used.}

\item{margins_names}{An optional list of vectors containing the names of the margin columns, corresponding
to the data frames in \code{margins}. Each vector should list the margin names for the respective data frame.}
}
\value{
A data frame representing the synthetic population, now with the target attribute added.
}
\description{
This function adds a target attribute to a synthetic population by fitting it to an input contingency table.
If margins are provided, the function will apply iterative proportional fitting (IPF) to adjust the target
attribute distribution based on these margins. After the attribute is added, the function performs validation checks.
}
\details{
This function adds a target attribute (e.g., age, income level, etc.) to a synthetic population, based on
its distribution in a provided contingency table. If marginal distributions are supplied, IPF is applied to adjust the
population contingency distribution according to the provided margins.

The function works in the following steps:
\enumerate{
\item \strong{Initial Data Validation}: It checks that all \code{group_by} columns are present in the synthetic population (\code{df}).
\item \strong{IPF or Contingency Table Fit}: If margins are provided, IPF is used to adjust the contingency table to match the
margin distributions. Otherwise, the contingency table is applied directly.
\item \strong{Attribute Assignment}: For each group defined by \code{group_by}, and if margins provided also by the additional contingency variables, the target attribute values are assigned to agents in the
synthetic population based on their distribution in the contingency table or the IPF-adjusted margins.
\item \strong{Validation}: After assigning the attribute, the function verifies that the added attribute's distribution matches the
original contingency table.
}
}
\examples{
# Example synthetic population data
df_synthetic <- data.frame(
  neighb_code = c("neigh_123", "neigh_123", "neigh_456"),
  sex = c("male", "female", "male"),
  age_group = c("25-45", "15-25", "45-65")
)

# Example contingency table
df_contingency <- data.frame(
  age_group = c("0-15", "15-25", "25-45", "45-65", "65+"),
  sex = c("male", "female", "male", "female", "male"),
  migrationbackground = c("Dutch", "Dutch", "Non-Dutch", "Dutch", "Non-Dutch"),
  count = c(19, 31, 66, 54, 29)
)

margins <- list(
  age_group = data.frame(
    neighb_code = c("neigh_123", "neigh_123", "neigh_123", "neigh_123", 
                   "neigh_123", "neigh_456", "neigh_456", "neigh_456", 
                     "neigh_456", "neigh_456"),
    age_group = c("0-15", "15-25", "25-45", "45-65", "65+", "0-15", 
                   "15-25", "25-45", "45-65", "65+"),
    count = c(50, 100, 150, 200, 75, 40, 90, 130, 180, 60)
  ),
  sex = data.frame(
    neighb_code = c("neigh_123", "neigh_123", "neigh_456", "neigh_456"),
    sex = c("male", "female", "male", "female"),
    count = c(250, 200, 220, 180)
  )
)

# Apply the function without margins
df_updated <- Conditional_attribute_adder(
  df = df_synthetic, 
  df_contingency = df_contingency, 
  target_attribute = "migrationbackground", 
  group_by = c("neighb_code"),
  margins = margins,
  margins_names = c("age_group", "sex")
)
}
