% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generat_agent_df.R
\name{distr_agent_neigh_age_group}
\alias{distr_agent_neigh_age_group}
\title{Populating the agent_df with age_group and neigh_ID attributes distributed like a given neighborhood marginal distribution}
\usage{
distr_agent_neigh_age_group(neigh_df, agent_df, neigh_id, age_colnames)
}
\arguments{
\item{neigh_df}{a dataframe of neighborhoods in the rows, indentified by an neigh-id column, and the marginal distribution across age-groups in the other columns.}

\item{agent_df}{the initiated agent_df generated by gen_agent_df}

\item{neigh_id}{the columnname of the column that indicates the neighborhood IDs}

\item{age_colnames}{a list of columnnames of the age_group classes}
}
\value{
returns the agent_df with the new attribute of age_group and neigh_ID. It also shuffles the agent_df's roworder in order to not introduce bias in subsequent steps
}
\description{
This function is the second function to be used after gen_agent_df and adds the first attributes of age_group and neigh_id, such that it satisfies the distribution of the given neighborhood age_group marginal distributions. The location and age_group attributes are hence representative and can be used as conditional variables for the next attributes (e.g. sex, then migration-background) in the following steps. From now on the multi-variable joint distribution of variables can be taken into account and combined with the neighborhood totals (marginal distributions) in order to receive a population that is spatially representative and in which the covariation of multiple attributes are representative.
}
\examples{
#mock data
#agent_df mock data
agent_df = as.data.frame(paste("Agent_",1:500, sep=""))
colnames(agent_df) = "agent_ID"

# neigh_df mock data
# the total population (sum of all agegroups across all neighborhoods) has to be equal to the length of the agent_df
neigh_df = as.data.frame(1:10)
colnames(neigh_df) = c("neigh_ID")
# we call our age_groups A1, A2, A3, but it can be any number of classes with any name
neigh_df$A1 = sample(x=1:20, size=10)
neigh_df$A2 = sample(x=1:20, size=10)
neigh_df$A3 = 50- (neigh_df$A1 + neigh_df$A2)

#function application
agent_df= distr_agent_neigh_age_group(neigh_df = neigh_df, agent_df = agent_df, neigh_id = "neigh_ID", age_colnames = c("A1", "A2", "A3"))
print(agent_df)

}
