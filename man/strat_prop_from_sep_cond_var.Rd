% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_conditional_prob.R
\name{strat_prop_from_sep_cond_var}
\alias{strat_prop_from_sep_cond_var}
\title{Creates a stratified propensity table from separate conditional variable joint distributions}
\usage{
strat_prop_from_sep_cond_var(
  df,
  nested_cond_attr_list,
  cond_var_names,
  cond_attr_column,
  var_for_pred,
  total_population
)
}
\arguments{
\item{df}{A dataframe with one column in which all classes of the conditional variables are listed in seperate rows and additional columns that show the marginal distributions for a variable of interest}

\item{nested_cond_attr_list}{a nested list of classes of conditional variables. (e.g. list(c("female", "male", "non-binary"), c("employed", "unemployed")))}

\item{cond_var_names}{a list of the names that you want to give the variables to which the  classes indicated in the nested_cond_attr_list belong. It has to have the same order as that list. (e.g. for above that could be c("sex", "employ_status"))}

\item{cond_attr_column}{The column in which all separate conditional variable classes are listed.}

\item{var_for_pred}{The columnnames that indicate the classes of the variable for which the stratified dataframe should be generated, if it is a binary variable, then only one class needs to be given, since the propensity to have the other class is class is 1-the propensity of the indicated class.}

\item{total_population}{The column indicating the total population that has the conditional variable attribute of the row}
}
\value{
a stratified dataset with all combinations of the conditional variables and the propensity to be/have the indicated classes
}
\description{
This function combines multiple - joint distributions of conditional variables into one stratified dataframe of all-variable combinations and the propensity to have the variable classes of interest.
}
\details{
#Example Table (random numbers)
\subsection{This is the input table with marginal distributions of the variable of interest (here employment) for one conditional variables at a time.}{\tabular{cccc}{
   cond_variables \tab employed \tab unemployed \tab tot_pop \cr
   male \tab 262 \tab 259 \tab 521 \cr
   female \tab 253 \tab 139 \tab 392 \cr
   non-binary \tab 57 \tab 304 \tab 361 \cr
   single_household \tab 158 \tab 244 \tab 402 \cr
   multi_pers_household \tab 118 \tab 311 \tab 429 \cr
}

}

\subsection{This is the output table.}{\tabular{cccc}{
   sex \tab hh_structure \tab prop_employed \tab prop_unemployed \cr
   male \tab single_household \tab 0.4479570 \tab 0.5520430 \cr
   male \tab multi_pers_household \tab 0.3889687 \tab 0.6110313 \cr
   female \tab single_household \tab 0.5192215 \tab 0.4807785 \cr
   female \tab multi_pers_household \tab 0.4602332 \tab 0.5397668 \cr
   non-binary \tab single_household \tab 0.2754648 \tab 0.7245352 \cr
   non-binary \tab multi_pers_household \tab 0.2164765 \tab 0.7835235 \cr
}

}
}
\examples{
## creating mock data
cond_variables = c("male", "female", "non-binary", "single_household", "multi_pers_household")
employed = sample(40:400,length(cond_variables))
unemployed = sample(40:400,length(cond_variables))
df = data.frame(cond_variables, employed , unemployed)
df$tot_pop = df$employed + df$unemployed
print(df)

# function application
strat_df = Strat_prop_from_sep_cond_var(df = df, nested_cond_attr_list = list(c("male", "female", "non-binary"), c("single_household", "multi_pers_household")), cond_var_names = c("sex", "hh_structure"), cond_attr_column = "cond_variables", var_for_pred = c("employed", "unemployed"), total_population = "tot_pop" )
print(strat_df)
}
