% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verify_attribute.R
\name{synthetic_population_to_contingency}
\alias{synthetic_population_to_contingency}
\title{Generate a contingency table from a synthetic population dataset}
\usage{
synthetic_population_to_contingency(
  df_synthetic_population,
  columns = NULL,
  full_crostab = FALSE
)
}
\arguments{
\item{df_synthetic_population}{A data frame representing the synthetic population, where each row corresponds to an agent.}

\item{columns}{A character vector specifying the column names (attributes) to be used for building the contingency table.
If NULL, all columns in the data frame will be used. Default is NULL.}

\item{full_crostab}{Logical; if TRUE, fills in missing combinations of attributes with zero counts. If FALSE, only observed
combinations will be included in the table. Default is FALSE.}
}
\value{
A data frame representing the contingency table, where each row is a unique combination of the specified attributes,
and a \code{Freq} column indicates the count of occurrences for that combination.
}
\description{
This function constructs a contingency table from a synthetic population data frame. The table represents counts for
each combination of specified attributes. If \code{full_crostab} is set to TRUE, it ensures all possible combinations
of attribute levels are represented in the table, filling in any missing combinations with a count of zero.
}
\details{
This function creates a contingency table by counting the occurrences of each unique combination of the specified attributes
(or all attributes if none are specified). The result is a data frame with one row per unique combination of attribute levels.

When \code{full_crostab} is TRUE, the function computes all possible combinations of the attribute levels and merges them with the
observed data. Missing combinations are filled with a count of 0. This is useful in cases where you want to ensure that
every possible combination of attributes is explicitly represented in the contingency table, even if no agents have that combination.
}
\examples{
# Example usage:
df_synthetic_population <- data.frame(
  age_group = c("0-15", "15-25", "25-45", "45-65", "65+", "0-15", "25-45"),
  sex = c("male", "female", "male", "female", "male", "female", "male"),
  migrationbackground = c("Dutch", "Dutch", "Non-Dutch", "Dutch", "Non-Dutch", "Non-Dutch", "Dutch")
)

# Create a contingency table for all columns
synthetic_population_to_contingency(df_synthetic_population)

# Create a contingency table for specific columns (age_group and sex)
synthetic_population_to_contingency(df_synthetic_population, columns = c("age_group", "sex"))

}
