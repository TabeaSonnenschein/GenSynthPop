% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_preparation.R
\name{add_spatial_units_to_agent_df}
\alias{add_spatial_units_to_agent_df}
\title{Add a new spatial unit to the agent dataframe based on a unit map}
\usage{
add_spatial_units_to_agent_df(
  agent_df,
  spat_unit_map,
  spat_id_colnam,
  new_spat_id_colnam
)
}
\arguments{
\item{agent_df}{the agent_df containing minimum the age group and neighborhood id}

\item{spat_unit_map}{a two column dataframe, in which the first column are the unique spatial units of the agent_df and the second column are the corresponding larger units of the marginal distribution dataframe}

\item{spat_id_colnam}{the name of the spatial unit id column in the agent_df}

\item{new_spat_id_colnam}{the name for the new spatial unit id column in the agent_df}
}
\value{
The agent_df with the new spatial unit column, where agents are assigned to the larger spatial units to which their smaller neighborhood belongs
}
\description{
Some marginal distributions are not available for the spatial units used to initiate/build the agent_df. However, as long as one spatial units fits into the other and hence can be mapped by having multiple of one spatial unit corresponding to one of the other spatial units, it is no problem. If the agent_df contains the smaller spatial units that fit into the larger units of the new marginal distribution dataframe, then use this function to add the corresponding larger units to the agent_df and use the newly added unit variable in the subsequent attribute distribution functions. If it is the other way and the smaller units are in the spatial marginal distributions dataframe then use the... The spatial unit maps can be generated with calculating the centroids of the smaller units and do a point in polygon function to see which centriods are in which larger spatial unit polygons.
}
\examples{
#agent_df mock data
agent_df = as.data.frame(paste("Agent_",1:500, sep=""))
colnames(agent_df) = "agent_ID"
agent_df$neigh_id = sample(x=1:20, size=10)

#Spatial unit conversion map
# let us say the new marginal distributions only have 10 units
# and you know how they correspond to your 20 agent neighborhood units
spat_unit_map = as.data.frame(1:20)
colnames(spat_unit_map) = "neigh_id"
spat_unit_map$district_id = rep(1:10, each = 2)

#apply function
agent_df_new = add_spatial_units_to_agent_df(agent_df = agent_df, spat_unit_map = spat_unit_map, spat_id_colnam = "neigh_id", new_spat_id_colnam = "district_id")
print(agent_df_new)

}
